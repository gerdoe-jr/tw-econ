name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose

    - name: Pack linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        cd target
        cd debug
        tar cf tw-econ-linux.tar.xz tw-econ
        mkdir artifacts
        mv tw-econ-linux.tar.xz artifacts
    - name: Pack windows
      if: contains(matrix.os, 'windows')
      run: |
        cd target
        cd debug
        powershell.exe -nologo -noprofile -command "& { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('tw-econ-windows.zip', 'tw-econ.exe'); }"
        mkdir artifacts
        mv tw-econ-windows.zip artifacts
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: tw-econ-windows.zip
        path: target/debug/artifacts